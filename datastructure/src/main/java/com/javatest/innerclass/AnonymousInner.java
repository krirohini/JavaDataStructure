package com.javatest.innerclass;

/**
 * http://www.javatpoint.com/anonymous-inner-class A class that have no name is
 * known as anonymous inner class in java. It should be used if you have to
 * override method of class or interface. Java Anonymous inner class can be
 * created by two ways:
 * 
 * Class (may be abstract or concrete). Interface
 * 
 *
 */
abstract class Person {
	abstract void eat();
}

interface Eatable{  
	 void eat();  
}  

class AnonymousInner {
	public static void main(String args[]) {
		// Anonymous Inner class 
		/**
		 * A class is created but its name is decided by the compiler
		 * it extends the Person class and provides the implementation of the eat() method.
		 * An object of Anonymous class is created that is referred by p reference variable of Person type.
		 * 
		 * 
static class AnonymousInner$1 extends Person  
{  
   AnonymousInner$1(){}  
   void eat()  
    {  
        System.out.println("nice fruits  abstract class");  
    }  
}  
		 * 
		 */
		
		Person p = new Person() {
			void eat() {
				System.out.println("nice fruits abstract class");
			}
		};
		p.eat();
		
		
		/**
		 * 
		 * Internal class generated by the compiler
static class AnonymousInner1$1 implements Eatable  
{  
	AnonymousInner1$1(){}  
	void eat(){
			System.out.println("nice fruits");
			}  
}  
		 */
		
		Eatable e = new Eatable() {
			
			@Override
			public void eat() {
				System.out.println("nice fruits interface");
				
			}
		};
		e.eat();
	}
}
