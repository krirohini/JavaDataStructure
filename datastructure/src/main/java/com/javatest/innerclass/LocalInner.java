package com.javatest.innerclass;

/**
 * 
 * Internal class generated by the compiler
class localInner1$Local  
{  
    final localInner1 this$0;  
    localInner1$Local()  
    {     
        super();  
        this$0 = Simple.this;  
    }  
    void msg()  
    {  
        System.out.println(localInner1.access$000(localInner1.this));  
    }  
}  
 * @author vikashkumar
 *
 */

public class LocalInner {

	private int data = 30;// instance variable

	void display() {
		 final int  value=50;//local variable must be final till jdk 1.7 only  
		 
		/** 
		 * Local Inner Class
		 * created inside a method
		 * 
		 *  invoke the methods of local inner class, you must instantiate this class inside the method.
		 *  
		 *  Rule: Local variable can't be private, public or protected.
		 *  1) Local inner class cannot be invoked from outside the method.
		 *  2) Local inner class cannot access non-final local variable till JDK 1.7. 
		 *  	Since JDK 1.8, it is possible to access the non-final local variable in local inner class.
		 */
		class Local {
			void msg() {
				System.out.println("private non final data of outer class " + data);
				System.out.println(" final local variable " + value);
			}
		}
		
		// Method call
		Local l = new Local();
		l.msg();
	}

	public static void main(String args[]) {
		LocalInner obj = new LocalInner();
		obj.display();
		
		// compilation error 
//		LocalInner inner = new LocalInner();
//		LocalInner.Local l = inner.new Local();
	}
}
